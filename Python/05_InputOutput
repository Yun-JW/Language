### Python 표준 입출력 ###
- 파이썬에서의 표준입/출력은 콘솔장치를 이용하는 경우와 파일에 저장된 자료를 입/출력 경우 입출력 관리가 이루어진다.
- 콘솔 입출력 = 파이썬 셀 이용
	표준 입력: input()함수
	표준 출력: print()함수


#Python의 표준 출력 : print() 함수
print(value1, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
- value1, value2 ... : 출력 대상이 되는 항목들 (문자열 상수)
- sep : 출력 대상들 사이의 구분자(기본은 하나의 공백)
- end : 기본은 개행(줄바꿈, '\n')
- file : 출력 대상(기본은 콘솔 sys.stdout)
- flush : 출력 버퍼를 비우는 기능
방법 1 : 포맷팅 : 출력 서식 이용 %
방법 2 : format() 함수 이용 2 {}
방법 3 : farmat() 함수 이용 2 {}
방법 4 : f{"변수명"}
print(f"제이름은{name}이고 나이는 {age}살입니다.")

#Python의 표준 출력: print() 함수
print("C", "C++", "JAVA", "Python") >> 각 단어 띄어서 출력됨
print("C" + "C++" + "JAVA" + "Python") >> 각 단어 붙어서 출력됨

방법1
print("저는 %d살입니다."  %20)
print("이름은 %s입니다." %"홍길동)
print("저의 이번 학기 학점은 %c입니다." %"A")
print("저는 %s와 %s을 잘합니다." %("JAVA, "Python"))
%s와 %c가 따로 있음

방법2: format()함수 1
print("저는 {}살입니다." .format(20)) >> 저는 20살입니다.
print("저는 {}와 {}을 잘합니다." .format("JAVA", "Python")) >> 저는 JAVA와 Python을 잘합니다.
print("저는 {0}와 {1}을 잘합니다." .format("JAVA", "Python")) >> 저는 Java와 Python을 잘합니다.
print("저는 {1}와 {0}을 잘합니다." .format("JAVA", "Python")) >> 저는 Python와 JAVA를 잘합니다.

방법3: format()함수 2
print("저는 {age}살이고, {language}을 잘합니다." .format(age=20, language="Python))
print("저는 {age}살이고, {language}을 잘합니다." .format(language="Python", age=20))
>> (둘다) 저는 20살이고, Python을 잘합니다.
